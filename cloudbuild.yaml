steps:
- id: 'print branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "******************"
      echo "$BRANCH_NAME"
      echo "******************"

- id: 'tf init'
  name: 'hashicorp/terraform'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME
        terraform init
      else
        for dir in environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}  
          echo "**** At environment ${env} ****"
          terraform init
          cd ../../
        done
      fi 

- id: 'tf plan'
  name: 'hashicorp/terraform'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME
        terraform plan
      else
        for dir in environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}  
          echo "**** At environment ${env} ****"
          terraform plan
          cd ../../
        done
      fi 
  
- id: 'tf apply'
  name: 'hashicorp/terraform'
  dir: environments/$BRANCH_NAME
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ $BRANCH_NAME = "master" ] || [ $BRANCH_NAME = "prod" ] ; then
        terraform apply -auto-approve
      else
        echo "********************************** SKIPPING APPLYING **********************************"
        echo "Branch '$BRANCH_NAME' does not represent an oficial environment."
        echo "***************************************************************************************"
      fi
